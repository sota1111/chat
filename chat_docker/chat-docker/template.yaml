AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.9

  Sample SAM Template for chat-docker

Parameters:
  UserPoolArn:
    Type: String
    Description: The ARN of the existing User Pool
    
Globals:
  Function:
    Timeout: 120
    MemorySize: 512

Resources:
  ChatFunc:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Timeout: 120
      MemorySize: 512
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
        - SecretsManagerReadWrite
      Events:
        ChatAPP:
          Type: Api
          Properties:
            Path: /ask
            Method: get
            RestApiId:
              Ref: ChatApi
            Auth:
              Authorizer: MyCognitoAuthorizer
        ChatAPPPost:
          Type: Api 
          Properties:
            Path: /ask
            Method: post
            RestApiId:
              Ref: ChatApi
            Auth:
              Authorizer: MyCognitoAuthorizer
        ChatAPPPut:
          Type: Api 
          Properties:
            Path: /ask
            Method: put
            RestApiId:
              Ref: ChatApi
            Auth:
              Authorizer: MyCognitoAuthorizer
        ChatAPPDelete:
          Type: Api 
          Properties:
            Path: /ask
            Method: delete
            RestApiId:
              Ref: ChatApi
            Auth:
              Authorizer: MyCognitoAuthorizer

    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./chat_app
      DockerTag: python3.9-v1

  ChatApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !Ref UserPoolArn
